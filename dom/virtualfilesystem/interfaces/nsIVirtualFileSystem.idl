/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIVirtualFileSystemCallback;

/**
 * XPCOM component which provides file system implementation.
 * Create and forward requests between providers and clients.
 */
[scriptable, uuid(4fa8b88d-0622-45be-8a55-51b9f9fa62b7)]
interface nsIVirtualFileSystem : nsISupports
{
  unsigned long abort(in unsigned long operationId,
                      in nsIVirtualFileSystemCallback callback);

  const unsigned long OPEN_FILE_MODE_READ = 0x0000;
  const unsigned long OPEN_FILE_MODE_WRITE = 0x0001;

  unsigned long openFile(in DOMString aPath,
                         in unsigned long aMode,
                         in nsIVirtualFileSystemCallback callback);

  unsigned long closeFile(in unsigned long aOpenFileId,
                          in nsIVirtualFileSystemCallback callback);

  unsigned long getMetadata(in DOMString aEntryPath,
                            in nsIVirtualFileSystemCallback callback);

  unsigned long readDirectory(in DOMString aDirPath,
                              in nsIVirtualFileSystemCallback callback);

  unsigned long readFile(in unsigned long aOpenFileId,
                         in unsigned long long aOffset,
                         in unsigned long long aLength,
                         in nsIVirtualFileSystemCallback callback);

  unsigned long unmount(in nsIVirtualFileSystemCallback callback);
};