/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "domstubs.idl"
#include "nsISupports.idl"

interface nsIArray;

/**
 * XPCOM component which represents the options of the request.
 * The options below are the same as the options defined in FileSystemProvider.webidl.
 */
[scriptable, uuid(88480bfb-100a-4821-9fd5-7dfcdc1c79c1)]
interface nsIVirtualFileSystemRequestedOptions : nsISupports
{
  attribute unsigned long requestId;

  attribute DOMString fileSystemId;
};

[scriptable, uuid(daf8313a-ac60-4604-bfe3-5d3487075167)]
interface nsIVirtualFileSystemAbortRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  attribute unsigned long operationRequestId;
};

[scriptable, uuid(a52bd515-da07-42f1-a30e-e2891b1e471b)]
interface nsIVirtualFileSystemGetMetadataRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  // the entry path of the meta data
  attribute DOMString entryPath;
};

[scriptable, uuid(c9fabeed-9585-4ed8-960b-79d29b056255)]
interface nsIVirtualFileSystemCloseFileRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  // the request ID of the opened file
  attribute unsigned long openRequestId;
};

[scriptable, uuid(12909eee-130d-498f-8477-71c043d4851e)]
interface nsIVirtualFileSystemOpenFileRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  /**
   * Note: MUST be matched with enum OpenFileMode in FileSystemProvider.webidl
   */
  const unsigned long OPEN_MODE_READ  = 0;
  const unsigned long OPEN_MODE_WRITE = 1;

  // the file path to be opened
  attribute DOMString filePath;

  // the open mode of opened file
  attribute unsigned long mode;
};

[scriptable, uuid(ae224dfc-6f90-4e5b-8a12-de6673b36295)]
interface nsIVirtualFileSystemReadDirectoryRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  // the directory path
  attribute DOMString dirPath;
};

[scriptable, uuid(afd6b7ea-fa4e-4675-8246-583bf62a8e53)]
interface nsIVirtualFileSystemReadFileRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  // the request ID of the opened file
  attribute unsigned long openRequestId;

  // the offset (in byte) of the file
  attribute unsigned long long offset;

  // the length (in byte) that read from the file
  attribute unsigned long long length;
};

/**
 * XPCOM component which represents the options for unmount method.
 */
[scriptable, uuid(819efda8-1d61-4522-b2e0-232981b9ddde)]
interface nsIVirtualFileSystemUnmountRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
};

/**
 * XPCOM component which represents the options for mount method.
 */
[scriptable, uuid(104d2635-d9cc-4269-bc63-fe77cde82d70)]
interface nsIVirtualFileSystemMountRequestedOptions : nsIVirtualFileSystemRequestedOptions
{
  attribute DOMString displayName;

  attribute boolean writable;

  attribute unsigned long openedFilesLimit;
};

/**
 * XPCOM component which represents an opened file.
 */
[scriptable, uuid(11b1380b-08ad-456b-a906-44687c0e8c75)]
interface nsIVirtualFileSystemOpenedFileInfo : nsIVirtualFileSystemOpenFileRequestedOptions
{
  attribute unsigned long openRequestId;
};

/**
 * XPCOM component which represents a file system.
 */
[scriptable, uuid(851c97c5-a46d-47a4-97f9-33707f6392ef)]
interface nsIVirtualFileSystemInfo : nsIVirtualFileSystemMountRequestedOptions
{
  readonly attribute nsIArray openedFiles;

  void appendOpenedFile(in nsIVirtualFileSystemOpenedFileInfo aFileInfo);
  void removeOpenedFile(in unsigned long aOpenRequestId);
};

/**
 * XPCOM component which represents the metadata of a file or a directory.
 * This is the same as EntryMetadata defined in FileSystemProviderGetMetadataEvent.webidl.
 */
[scriptable, uuid(f6c620a2-e1b4-410f-b286-cc04eedf6a63)]
interface nsIEntryMetadata : nsISupports
{
  // The data is a directory or not.
  attribute boolean isDirectory;

  // Base name of the data.
  attribute DOMString name;

  // Size of the data.
  attribute unsigned long long size;

  // Modification time of the data.
  attribute DOMTimeStamp modificationTime;

  // Optional string for MIME type, might be empty.
  attribute DOMString mimeType;
};

%{C++
#define VIRTUALFILESYSTEMABORTREQUESTEDOPTIONS_CID \
  {0xdaf8313a, 0xac60, 0x4604, {0xbf, 0xe3, 0x5d, 0x34, 0x70, 0x75, 0x51, 0x67}}
#define VIRTUAL_FILE_SYSTEM_ABORT_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-abort-requested-options;1"

#define VIRTUALFILESYSTEMOPENFILEREQUESTEDOPTIONS_CID \
  {0x12909eee, 0x130d, 0x498f, {0x84, 0x77, 0x71, 0xc0, 0x43, 0xd4, 0x85, 0x1e}}
#define VIRTUAL_FILE_SYSTEM_OPENFILE_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-openfile-requested-options;1"

#define VIRTUALFILESYSTEMCLOSEFILEREQUESTEDOPTIONS_CID \
  {0xc9fabeed, 0x9585, 0x4ed8, {0x96, 0x0b, 0x79, 0xd2, 0x9b, 0x06, 0x62, 0x55}}
#define VIRTUAL_FILE_SYSTEM_CLOSEFILE_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-closefile-requested-options;1"

#define VIRTUALFILESYSTEMGETMETADATAREQUESTEDOPTIONS_CID \
  {0xa52bd515, 0xda07, 0x42f1, {0xa3, 0x0e, 0xe2, 0x89, 0x1b, 0x1e, 0x47, 0x1b}}
#define VIRTUAL_FILE_SYSTEM_GETMETADATA_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-getmetadata-requested-options;1"

#define VIRTUALFILESYSTEMREADDIRECTORYREQUESTEDOPTIONS_CID \
  {0xae224dfc, 0x6f90, 0x4e5b, {0x8a, 0x12, 0xde, 0x66, 0x73, 0xb3, 0x62, 0x95}}
#define VIRTUAL_FILE_SYSTEM_READDIRECTORY_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-readdirectory-requested-options;1"

#define VIRTUALFILESYSTEMREADFILEREQUESTEDOPTIONS_CID \
  {0xafd6b7ea, 0xfa4e, 0x4675, {0x82, 0x46, 0x58, 0x3b, 0xf6, 0x2a, 0x8e, 0x53}}
#define VIRTUAL_FILE_SYSTEM_READFILE_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-readfile-requested-options;1"

#define VIRTUALFILESYSTEMUNMOUNTREQUESTEDOPTIONS_CID \
  {0xfe50939e, 0x50b8, 0x4ff2, { 0x99, 0xbc, 0xf5, 0x5e, 0x80, 0x3e, 0xaa, 0xab}}
#define VIRTUAL_FILE_SYSTEM_UNMOUNT_REQUESTED_OPTIONS_CONTRACT_ID \
  "@mozilla.org/virtualfilesystem/virtualfilesystem-unmount-requested-options;1"
%}
